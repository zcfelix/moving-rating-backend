plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'org.flywaydb.flyway' version '10.17.0'
}

group = 'com.movie'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = JavaVersion.VERSION_21
	targetCompatibility = JavaVersion.VERSION_21
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
	maven {
		url "https://plugins.gradle.org/m2/"
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	implementation 'com.h2database:h2:2.2.220'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

// set flyway configuration
flyway {
	url = "jdbc:h2:file:${System.getProperty('user.dir')}/data/mydatabase"
	user = 'sa'
	password = 'password'
	locations = ['filesystem:src/main/resources/db/migration']
	cleanDisabled = false
}

tasks.register('createMigration') {
	doLast {
		if (!project.hasProperty('description')) {
			throw new GradleException("Please provide a description for the migration using -Pdescription=<description>")
		}

		def description = project.property('description')
		def timestamp = new Date().format("yyyyMMddHHmmss")
		def migrationName = "V${timestamp}__${description}.sql"
		def migrationDir = file('src/main/resources/db/migration')

		if (!migrationDir.exists()) {
			migrationDir.mkdirs()
		}

		def migrationFile = new File(migrationDir, migrationName)
		migrationFile.createNewFile()
		println "Created migration file: ${migrationFile.path}"
	}
}